{"version":3,"sources":["app.module.css","Filter/filter.module.css","ContactList/contactList.module.css","Alert/alert.module.css","ContactListItem/contactListItem.module.css","Alert/fadeAlert.module.css","Filter/fadeFilter.module.css","redux/phonebook-actions.js","redux/phonebook-reducers.js","redux/store.js","Alert/index.jsx","ContactForm/index.js","Filter/index.jsx","ContactListItem/index.jsx","ContactList/index.jsx","App.js","index.js","ContactForm/contactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","Alert","message","className","styles","back","ContactForm","error","alert","onChange","event","target","value","setState","onSubmit","preventDefault","props","some","contact","addAlertMessage","reset","text","setTimeout","this","CSSTransition","in","classNames","alertStyles","timeout","unmountOnExit","form","label","title","input","type","btn","Component","connect","dispatch","actions","onChangeFilter","filterInput","ContactListItem","onDeleteContact","button","onClick","getFilteredContacts","allContacts","toLowerCase","includes","TransitionGroup","list","component","map","item","clearFilter","appear","length","nothing","filterStyles","ReactDOM","render","loading","document","querySelector"],"mappings":"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","file":"static/js/main.314fc7e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"app_title__1Dhj2\",\"appear\":\"app_appear__2VDFc\",\"appearActive\":\"app_appearActive__3Hkd2\",\"nothing\":\"app_nothing__iTJK4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__1cK57\",\"title\":\"filter_title__3alMq\",\"filterInput\":\"filter_filterInput__2A6d6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__1UvJu\",\"item\":\"contactList_item__ejmWN\",\"enter\":\"contactList_enter__3R_FU\",\"enterActive\":\"contactList_enterActive__31K7A\",\"exit\":\"contactList_exit__2fFO8\",\"exitActive\":\"contactList_exitActive__1dK4c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"alert_back__38yr0\",\"message\":\"alert_message__1SmGU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"contactListItem_contact__Y3tHk\",\"button\":\"contactListItem_button__3GweG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeAlert_enter__2DK6t\",\"enterActive\":\"fadeAlert_enterActive__2S97W\",\"exit\":\"fadeAlert_exit__24Jus\",\"exitActive\":\"fadeAlert_exitActive__QMPMY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeFilter_enter__2QEzp\",\"enterActive\":\"fadeFilter_enterActive__2sVpD\",\"exit\":\"fadeFilter_exit__3my0c\",\"exitActive\":\"fadeFilter_exitActive__2-4o8\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const addContact = createAction('phonebook/add', (name, number) => ({\r\n    payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number\r\n    },\r\n}));\r\n\r\nexport const deleteContact = createAction('phonebook/delete');\r\n\r\nexport const changeFilter = createAction('phonebook/changeFilter');","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter } from './phonebook-actions';\r\n\r\nconst initialContacts = [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst items = createReducer(\r\n    initialContacts, {\r\n        [addContact]: (state, { payload }) => [...state, payload],\r\n        [deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n    }\r\n)\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './phonebook-reducers';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);","import PropTypes from 'prop-types';\r\nimport styles from './alert.module.css';\r\n\r\nexport default function Alert ({ message }) {\r\n\treturn (\r\n\t\t<div className={styles.back}>\r\n\t\t\t<p className={styles.message}>{message}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nAlert.propTypes = {\r\n\tmessage: PropTypes.string,\r\n};","import { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../redux/phonebook-actions';\r\n\r\nimport Alert from '../Alert/index';\r\n\r\nimport alertStyles from '../Alert/fadeAlert.module.css';\r\nimport styles from './contactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    static propTypes = {\r\n\t\tname: PropTypes.string,\r\n\t\tnumber: PropTypes.number,\r\n\t\tonChange: PropTypes.func,\r\n\t\tonSubmit: PropTypes.func,\r\n\t};\r\n\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        error: false,\r\n        alert: '',\r\n    };\r\n\r\n    onChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const { name, number } = this.state;\r\n        const contacts = this.props.contacts;\r\n\r\n        if (contacts.some(contact => contact.name === name)) {\r\n            this.addAlertMessage(`${name} is already in contacts`);\r\n            return;\r\n        }\r\n\r\n        this.props.onSubmit(name, number);\r\n        this.reset();\r\n    }\r\n\r\n    addAlertMessage = text => {\r\n\t\tthis.setState({\r\n\t\t\terror: true,\r\n\t\t\talert: text,\r\n\t\t});\r\n\t\tsetTimeout(() => this.setState({\r\n\t\t\terror: false\r\n\t\t}), 1500);\r\n\t}\r\n\r\n    reset () {\r\n        this.setState({\r\n            name: '',\r\n            number: '',\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { name, number, error, alert } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <CSSTransition\r\n\t\t\t\t\tin={error}\r\n\t\t\t\t\tclassNames={alertStyles}\r\n\t\t\t\t\ttimeout={250}\r\n\t\t\t\t\tunmountOnExit\r\n\t\t\t\t>\r\n          \t\t\t<Alert text={alert}/>\r\n        \t\t</CSSTransition>\r\n            <form onSubmit={this.onSubmit} className={styles.form}>\r\n                <label className={styles.label}>\r\n                    <span className={styles.title}>Name</span>\r\n                    <input\r\n                        className={styles.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </label>\r\n\r\n                <label className={styles.label}>\r\n                    <span className={styles.title}>Number</span>\r\n                    <input\r\n                        className={styles.input}\r\n                        type=\"text\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </label>\r\n\r\n                <button type=\"submit\" className={styles.btn}>Add new contact</button>\r\n            </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: (name, number) => dispatch(actions.addContact(name, number))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as actions from '../redux/phonebook-actions';\r\n\r\nimport styles from './filter.module.css';\r\n\r\nfunction Filter ({ value, onChangeFilter }) {\r\n    return (\r\n        <div className={styles.filter}>\r\n            <p className={styles.title}>Find contacts by name</p>\r\n            <input\r\n                className={styles.filterInput}\r\n                name=\"filter\"\r\n                onChange={onChangeFilter}\r\n                value={value}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n\tvalue: PropTypes.string.isRequired,\r\n    onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChangeFilter: event => dispatch(actions.changeFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import PropTypes from 'prop-types';\r\n\r\nimport styles from './contactListItem.module.css';\r\n\r\nexport default function ContactListItem ({ contact, onDeleteContact }) {\r\n    return(\r\n        <>\r\n            <span className={styles.contact}>\r\n                {contact.name}: {contact.number}\r\n            </span>\r\n            <button className={styles.button} onClick= {()=>onDeleteContact(contact.id)}>Delete</button>\r\n        </>\r\n    );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n\tcontact: PropTypes.object,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/phonebook-actions';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nimport styles from './contactList.module.css';\r\n\r\nfunction ContactList ({ contacts, onDeleteContact}) {\r\n    return(\r\n        <TransitionGroup className={styles.list} component=\"ul\">\r\n            {contacts.map(contact => (\r\n                <CSSTransition\r\n                    key={contact.id}\r\n                    timeout={250}\r\n                    classNames={styles}\r\n                >\r\n                    <li className={styles.item}>\r\n                        <ContactListItem contact={contact} onDeleteContact={onDeleteContact}/>\r\n                    </li>\r\n                </CSSTransition>\r\n            ))}\r\n        </TransitionGroup>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n\tcontacts: PropTypes.array,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n    return allContacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => {\r\n    return {\r\n        contacts: getFilteredContacts(items, filter),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDeleteContact: (id) => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\n// js\r\nimport ContactForm from './ContactForm/index';\r\nimport Filter from './Filter/index';\r\nimport ContactList from './ContactList/index';\r\n\r\n// css\r\nimport styles from './app.module.css';\r\n\r\nimport filterStyles from './Filter/fadeFilter.module.css';\r\n\r\nconst App = ({ contacts, clearFilter }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<CSSTransition\r\n\t\t\t\tin={true}\r\n\t\t\t\tappear\r\n\t\t\t\ttimeout={500}\r\n\t\t\t\tclassNames={styles}\r\n\t\t\t>\r\n\t\t\t\t<h1 className={styles.title}>Phonebook</h1>\r\n\t\t\t</CSSTransition>\r\n\r\n\t\t\t<ContactForm />\r\n\t\t\t\t{contacts.length === 0\r\n\t\t\t\t? <p className={styles.nothing}>There are no contacts :((</p>\r\n\t\t\t\t: (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<h2 className={styles.title}>Contacts</h2>\r\n\r\n\t\t\t\t\t\t<CSSTransition\r\n\t\t\t\t\t\t\tin={contacts.length > 1}\r\n\t\t\t\t\t\t\ttimeout={500}\r\n\t\t\t\t\t\t\tclassNames={filterStyles}\r\n\t\t\t\t\t\t\tunmountOnExit\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Filter />\r\n\t\t\t\t\t\t</CSSTransition>\r\n\r\n\t\t\t\t\t\t<ContactList />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tcontacts: state.contacts.items,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(App);","import ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\n\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<PersistGate loading={null} persistor={persistor}>\r\n\t\t\t<App />\r\n\t\t</PersistGate>\r\n    </Provider>,\r\ndocument.querySelector('#root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__22HPK\",\"label\":\"contactForm_label__1cQHb\",\"title\":\"contactForm_title__1Vhrn\",\"input\":\"contactForm_input__EI9LX\",\"btn\":\"contactForm_btn__2k7oB\"};"],"sourceRoot":""}